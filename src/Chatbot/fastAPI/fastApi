from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

app = FastAPI()

# allow requests from every IP
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# class for User Messages
class UserMessage(BaseModel):
    userMessage: str

# class for the prompt that should be put before the user message
class PrePrompt(BaseModel):
    prePrompt: str

@app.post("/mockAPI")
async def mock_api(user_message: UserMessage, pre_prompt: PrePrompt):
    # Process the message and generate the appropriate response
    # User input is not processed yet but can be processes later in here
    chatbot_message = "Response from the chatbot API"
    return {"botMessage": chatbot_message}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="localhost", port=8000)